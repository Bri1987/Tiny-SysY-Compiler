; ModuleID = '71_full_conn.bc'
source_filename = "71_full_conn.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @relu_reg(i32 %0) #0 {
  %2 = icmp sgt i32 %0, 127
  br i1 %2, label %3, label %4

3:                                                ; preds = %1
  br label %8

4:                                                ; preds = %1
  %5 = icmp slt i32 %0, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  br label %8

7:                                                ; preds = %4
  br label %8

8:                                                ; preds = %7, %6, %3
  %.0 = phi i32 [ 127, %3 ], [ 0, %6 ], [ %0, %7 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @model([5 x i32]* %0) #0 {
  %2 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %3 = getelementptr inbounds [5 x i32], [5 x i32]* %2, i64 0, i64 0
  %4 = load i32, i32* %3, align 4
  %5 = mul nsw i32 %4, 85
  %6 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %7 = getelementptr inbounds [5 x i32], [5 x i32]* %6, i64 0, i64 1
  %8 = load i32, i32* %7, align 4
  %9 = mul nsw i32 %8, 23
  %10 = add nsw i32 %5, %9
  %11 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %12 = getelementptr inbounds [5 x i32], [5 x i32]* %11, i64 0, i64 2
  %13 = load i32, i32* %12, align 4
  %14 = mul nsw i32 %13, -82
  %15 = add nsw i32 %10, %14
  %16 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %17 = getelementptr inbounds [5 x i32], [5 x i32]* %16, i64 0, i64 3
  %18 = load i32, i32* %17, align 4
  %19 = mul nsw i32 %18, -103
  %20 = add nsw i32 %15, %19
  %21 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %22 = getelementptr inbounds [5 x i32], [5 x i32]* %21, i64 0, i64 4
  %23 = load i32, i32* %22, align 4
  %24 = mul nsw i32 %23, -123
  %25 = add nsw i32 %20, %24
  %26 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %27 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 0
  %28 = load i32, i32* %27, align 4
  %29 = mul nsw i32 %28, 64
  %30 = add nsw i32 %25, %29
  %31 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %32 = getelementptr inbounds [5 x i32], [5 x i32]* %31, i64 0, i64 1
  %33 = load i32, i32* %32, align 4
  %34 = mul nsw i32 %33, -120
  %35 = add nsw i32 %30, %34
  %36 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %37 = getelementptr inbounds [5 x i32], [5 x i32]* %36, i64 0, i64 2
  %38 = load i32, i32* %37, align 4
  %39 = mul nsw i32 %38, 50
  %40 = add nsw i32 %35, %39
  %41 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %42 = getelementptr inbounds [5 x i32], [5 x i32]* %41, i64 0, i64 3
  %43 = load i32, i32* %42, align 4
  %44 = mul nsw i32 %43, -59
  %45 = add nsw i32 %40, %44
  %46 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %47 = getelementptr inbounds [5 x i32], [5 x i32]* %46, i64 0, i64 4
  %48 = load i32, i32* %47, align 4
  %49 = mul nsw i32 %48, 47
  %50 = add nsw i32 %45, %49
  %51 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %52 = getelementptr inbounds [5 x i32], [5 x i32]* %51, i64 0, i64 0
  %53 = load i32, i32* %52, align 4
  %54 = mul nsw i32 %53, -111
  %55 = add nsw i32 %50, %54
  %56 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %57 = getelementptr inbounds [5 x i32], [5 x i32]* %56, i64 0, i64 1
  %58 = load i32, i32* %57, align 4
  %59 = mul nsw i32 %58, -67
  %60 = add nsw i32 %55, %59
  %61 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %62 = getelementptr inbounds [5 x i32], [5 x i32]* %61, i64 0, i64 2
  %63 = load i32, i32* %62, align 4
  %64 = mul nsw i32 %63, -106
  %65 = add nsw i32 %60, %64
  %66 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %67 = getelementptr inbounds [5 x i32], [5 x i32]* %66, i64 0, i64 3
  %68 = load i32, i32* %67, align 4
  %69 = mul nsw i32 %68, -75
  %70 = add nsw i32 %65, %69
  %71 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %72 = getelementptr inbounds [5 x i32], [5 x i32]* %71, i64 0, i64 4
  %73 = load i32, i32* %72, align 4
  %74 = mul nsw i32 %73, -102
  %75 = add nsw i32 %70, %74
  %76 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %77 = getelementptr inbounds [5 x i32], [5 x i32]* %76, i64 0, i64 0
  %78 = load i32, i32* %77, align 4
  %79 = mul nsw i32 %78, 34
  %80 = add nsw i32 %75, %79
  %81 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %82 = getelementptr inbounds [5 x i32], [5 x i32]* %81, i64 0, i64 1
  %83 = load i32, i32* %82, align 4
  %84 = mul nsw i32 %83, -39
  %85 = add nsw i32 %80, %84
  %86 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %86, i64 0, i64 2
  %88 = load i32, i32* %87, align 4
  %89 = mul nsw i32 %88, 65
  %90 = add nsw i32 %85, %89
  %91 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %92 = getelementptr inbounds [5 x i32], [5 x i32]* %91, i64 0, i64 3
  %93 = load i32, i32* %92, align 4
  %94 = mul nsw i32 %93, 47
  %95 = add nsw i32 %90, %94
  %96 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %97 = getelementptr inbounds [5 x i32], [5 x i32]* %96, i64 0, i64 4
  %98 = load i32, i32* %97, align 4
  %99 = mul nsw i32 %98, 113
  %100 = add nsw i32 %95, %99
  %101 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %102 = getelementptr inbounds [5 x i32], [5 x i32]* %101, i64 0, i64 0
  %103 = load i32, i32* %102, align 4
  %104 = mul nsw i32 %103, 110
  %105 = add nsw i32 %100, %104
  %106 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %107 = getelementptr inbounds [5 x i32], [5 x i32]* %106, i64 0, i64 1
  %108 = load i32, i32* %107, align 4
  %109 = mul nsw i32 %108, 47
  %110 = add nsw i32 %105, %109
  %111 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %112 = getelementptr inbounds [5 x i32], [5 x i32]* %111, i64 0, i64 2
  %113 = load i32, i32* %112, align 4
  %114 = mul nsw i32 %113, -4
  %115 = add nsw i32 %110, %114
  %116 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %117 = getelementptr inbounds [5 x i32], [5 x i32]* %116, i64 0, i64 3
  %118 = load i32, i32* %117, align 4
  %119 = mul nsw i32 %118, 80
  %120 = add nsw i32 %115, %119
  %121 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %122 = getelementptr inbounds [5 x i32], [5 x i32]* %121, i64 0, i64 4
  %123 = load i32, i32* %122, align 4
  %124 = mul nsw i32 %123, 46
  %125 = add nsw i32 %120, %124
  %126 = call i32 @relu_reg(i32 %125)
  %127 = mul nsw i32 %126, 39
  %128 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %129 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 0
  %130 = load i32, i32* %129, align 4
  %131 = mul nsw i32 %130, -106
  %132 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %133 = getelementptr inbounds [5 x i32], [5 x i32]* %132, i64 0, i64 1
  %134 = load i32, i32* %133, align 4
  %135 = mul nsw i32 %134, 126
  %136 = add nsw i32 %131, %135
  %137 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %138 = getelementptr inbounds [5 x i32], [5 x i32]* %137, i64 0, i64 2
  %139 = load i32, i32* %138, align 4
  %140 = mul nsw i32 %139, -18
  %141 = add nsw i32 %136, %140
  %142 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %143 = getelementptr inbounds [5 x i32], [5 x i32]* %142, i64 0, i64 3
  %144 = load i32, i32* %143, align 4
  %145 = mul nsw i32 %144, -31
  %146 = add nsw i32 %141, %145
  %147 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %147, i64 0, i64 4
  %149 = load i32, i32* %148, align 4
  %150 = mul nsw i32 %149, -8
  %151 = add nsw i32 %146, %150
  %152 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %153 = getelementptr inbounds [5 x i32], [5 x i32]* %152, i64 0, i64 0
  %154 = load i32, i32* %153, align 4
  %155 = mul nsw i32 %154, 47
  %156 = add nsw i32 %151, %155
  %157 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %158 = getelementptr inbounds [5 x i32], [5 x i32]* %157, i64 0, i64 1
  %159 = load i32, i32* %158, align 4
  %160 = mul nsw i32 %159, -4
  %161 = add nsw i32 %156, %160
  %162 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %163 = getelementptr inbounds [5 x i32], [5 x i32]* %162, i64 0, i64 2
  %164 = load i32, i32* %163, align 4
  %165 = mul nsw i32 %164, 67
  %166 = add nsw i32 %161, %165
  %167 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %168 = getelementptr inbounds [5 x i32], [5 x i32]* %167, i64 0, i64 3
  %169 = load i32, i32* %168, align 4
  %170 = mul nsw i32 %169, -94
  %171 = add nsw i32 %166, %170
  %172 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %173 = getelementptr inbounds [5 x i32], [5 x i32]* %172, i64 0, i64 4
  %174 = load i32, i32* %173, align 4
  %175 = mul nsw i32 %174, -121
  %176 = add nsw i32 %171, %175
  %177 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %178 = getelementptr inbounds [5 x i32], [5 x i32]* %177, i64 0, i64 0
  %179 = load i32, i32* %178, align 4
  %180 = mul nsw i32 %179, 7
  %181 = add nsw i32 %176, %180
  %182 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %183 = getelementptr inbounds [5 x i32], [5 x i32]* %182, i64 0, i64 1
  %184 = load i32, i32* %183, align 4
  %185 = mul nsw i32 %184, -21
  %186 = add nsw i32 %181, %185
  %187 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %188 = getelementptr inbounds [5 x i32], [5 x i32]* %187, i64 0, i64 2
  %189 = load i32, i32* %188, align 4
  %190 = mul nsw i32 %189, -60
  %191 = add nsw i32 %186, %190
  %192 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %193 = getelementptr inbounds [5 x i32], [5 x i32]* %192, i64 0, i64 3
  %194 = load i32, i32* %193, align 4
  %195 = mul nsw i32 %194, -43
  %196 = add nsw i32 %191, %195
  %197 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %198 = getelementptr inbounds [5 x i32], [5 x i32]* %197, i64 0, i64 4
  %199 = load i32, i32* %198, align 4
  %200 = mul nsw i32 %199, 105
  %201 = add nsw i32 %196, %200
  %202 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %203 = getelementptr inbounds [5 x i32], [5 x i32]* %202, i64 0, i64 0
  %204 = load i32, i32* %203, align 4
  %205 = mul nsw i32 %204, -42
  %206 = add nsw i32 %201, %205
  %207 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %208 = getelementptr inbounds [5 x i32], [5 x i32]* %207, i64 0, i64 1
  %209 = load i32, i32* %208, align 4
  %210 = mul nsw i32 %209, 87
  %211 = add nsw i32 %206, %210
  %212 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %213 = getelementptr inbounds [5 x i32], [5 x i32]* %212, i64 0, i64 2
  %214 = load i32, i32* %213, align 4
  %215 = mul nsw i32 %214, 29
  %216 = add nsw i32 %211, %215
  %217 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %218 = getelementptr inbounds [5 x i32], [5 x i32]* %217, i64 0, i64 3
  %219 = load i32, i32* %218, align 4
  %220 = mul nsw i32 %219, -106
  %221 = add nsw i32 %216, %220
  %222 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %223 = getelementptr inbounds [5 x i32], [5 x i32]* %222, i64 0, i64 4
  %224 = load i32, i32* %223, align 4
  %225 = mul nsw i32 %224, -31
  %226 = add nsw i32 %221, %225
  %227 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %228 = getelementptr inbounds [5 x i32], [5 x i32]* %227, i64 0, i64 0
  %229 = load i32, i32* %228, align 4
  %230 = mul nsw i32 %229, -110
  %231 = add nsw i32 %226, %230
  %232 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %233 = getelementptr inbounds [5 x i32], [5 x i32]* %232, i64 0, i64 1
  %234 = load i32, i32* %233, align 4
  %235 = mul nsw i32 %234, -100
  %236 = add nsw i32 %231, %235
  %237 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %238 = getelementptr inbounds [5 x i32], [5 x i32]* %237, i64 0, i64 2
  %239 = load i32, i32* %238, align 4
  %240 = mul nsw i32 %239, -22
  %241 = add nsw i32 %236, %240
  %242 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %243 = getelementptr inbounds [5 x i32], [5 x i32]* %242, i64 0, i64 3
  %244 = load i32, i32* %243, align 4
  %245 = mul nsw i32 %244, -75
  %246 = add nsw i32 %241, %245
  %247 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %248 = getelementptr inbounds [5 x i32], [5 x i32]* %247, i64 0, i64 4
  %249 = load i32, i32* %248, align 4
  %250 = mul nsw i32 %249, -125
  %251 = add nsw i32 %246, %250
  %252 = call i32 @relu_reg(i32 %251)
  %253 = mul nsw i32 %252, 77
  %254 = add nsw i32 %127, %253
  %255 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %256 = getelementptr inbounds [5 x i32], [5 x i32]* %255, i64 0, i64 0
  %257 = load i32, i32* %256, align 4
  %258 = mul nsw i32 %257, 26
  %259 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %260 = getelementptr inbounds [5 x i32], [5 x i32]* %259, i64 0, i64 1
  %261 = load i32, i32* %260, align 4
  %262 = mul nsw i32 %261, 76
  %263 = add nsw i32 %258, %262
  %264 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %265 = getelementptr inbounds [5 x i32], [5 x i32]* %264, i64 0, i64 2
  %266 = load i32, i32* %265, align 4
  %267 = mul nsw i32 %266, -70
  %268 = add nsw i32 %263, %267
  %269 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %270 = getelementptr inbounds [5 x i32], [5 x i32]* %269, i64 0, i64 3
  %271 = load i32, i32* %270, align 4
  %272 = mul nsw i32 %271, 29
  %273 = add nsw i32 %268, %272
  %274 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %275 = getelementptr inbounds [5 x i32], [5 x i32]* %274, i64 0, i64 4
  %276 = load i32, i32* %275, align 4
  %277 = mul nsw i32 %276, -95
  %278 = add nsw i32 %273, %277
  %279 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %280 = getelementptr inbounds [5 x i32], [5 x i32]* %279, i64 0, i64 0
  %281 = load i32, i32* %280, align 4
  %282 = mul nsw i32 %281, 96
  %283 = add nsw i32 %278, %282
  %284 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %285 = getelementptr inbounds [5 x i32], [5 x i32]* %284, i64 0, i64 1
  %286 = load i32, i32* %285, align 4
  %287 = mul nsw i32 %286, 52
  %288 = add nsw i32 %283, %287
  %289 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %290 = getelementptr inbounds [5 x i32], [5 x i32]* %289, i64 0, i64 2
  %291 = load i32, i32* %290, align 4
  %292 = mul nsw i32 %291, -68
  %293 = add nsw i32 %288, %292
  %294 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %295 = getelementptr inbounds [5 x i32], [5 x i32]* %294, i64 0, i64 3
  %296 = load i32, i32* %295, align 4
  %297 = mul nsw i32 %296, -5
  %298 = add nsw i32 %293, %297
  %299 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %300 = getelementptr inbounds [5 x i32], [5 x i32]* %299, i64 0, i64 4
  %301 = load i32, i32* %300, align 4
  %302 = mul nsw i32 %301, 34
  %303 = add nsw i32 %298, %302
  %304 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %305 = getelementptr inbounds [5 x i32], [5 x i32]* %304, i64 0, i64 0
  %306 = load i32, i32* %305, align 4
  %307 = mul nsw i32 %306, -34
  %308 = add nsw i32 %303, %307
  %309 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %310 = getelementptr inbounds [5 x i32], [5 x i32]* %309, i64 0, i64 1
  %311 = load i32, i32* %310, align 4
  %312 = mul nsw i32 %311, 102
  %313 = add nsw i32 %308, %312
  %314 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %315 = getelementptr inbounds [5 x i32], [5 x i32]* %314, i64 0, i64 2
  %316 = load i32, i32* %315, align 4
  %317 = mul nsw i32 %316, 6
  %318 = add nsw i32 %313, %317
  %319 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %320 = getelementptr inbounds [5 x i32], [5 x i32]* %319, i64 0, i64 3
  %321 = load i32, i32* %320, align 4
  %322 = mul nsw i32 %321, -38
  %323 = add nsw i32 %318, %322
  %324 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %325 = getelementptr inbounds [5 x i32], [5 x i32]* %324, i64 0, i64 4
  %326 = load i32, i32* %325, align 4
  %327 = mul nsw i32 %326, 27
  %328 = add nsw i32 %323, %327
  %329 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %330 = getelementptr inbounds [5 x i32], [5 x i32]* %329, i64 0, i64 0
  %331 = load i32, i32* %330, align 4
  %332 = mul nsw i32 %331, 110
  %333 = add nsw i32 %328, %332
  %334 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %335 = getelementptr inbounds [5 x i32], [5 x i32]* %334, i64 0, i64 1
  %336 = load i32, i32* %335, align 4
  %337 = mul nsw i32 %336, 116
  %338 = add nsw i32 %333, %337
  %339 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %340 = getelementptr inbounds [5 x i32], [5 x i32]* %339, i64 0, i64 2
  %341 = load i32, i32* %340, align 4
  %342 = mul nsw i32 %341, 39
  %343 = add nsw i32 %338, %342
  %344 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %345 = getelementptr inbounds [5 x i32], [5 x i32]* %344, i64 0, i64 3
  %346 = load i32, i32* %345, align 4
  %347 = mul nsw i32 %346, -63
  %348 = add nsw i32 %343, %347
  %349 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %350 = getelementptr inbounds [5 x i32], [5 x i32]* %349, i64 0, i64 4
  %351 = load i32, i32* %350, align 4
  %352 = mul nsw i32 %351, -99
  %353 = add nsw i32 %348, %352
  %354 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %355 = getelementptr inbounds [5 x i32], [5 x i32]* %354, i64 0, i64 0
  %356 = load i32, i32* %355, align 4
  %357 = mul nsw i32 %356, 65
  %358 = add nsw i32 %353, %357
  %359 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %360 = getelementptr inbounds [5 x i32], [5 x i32]* %359, i64 0, i64 1
  %361 = load i32, i32* %360, align 4
  %362 = mul nsw i32 %361, 120
  %363 = add nsw i32 %358, %362
  %364 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %365 = getelementptr inbounds [5 x i32], [5 x i32]* %364, i64 0, i64 2
  %366 = load i32, i32* %365, align 4
  %367 = mul nsw i32 %366, -39
  %368 = add nsw i32 %363, %367
  %369 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %370 = getelementptr inbounds [5 x i32], [5 x i32]* %369, i64 0, i64 3
  %371 = load i32, i32* %370, align 4
  %372 = mul nsw i32 %371, -6
  %373 = add nsw i32 %368, %372
  %374 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %375 = getelementptr inbounds [5 x i32], [5 x i32]* %374, i64 0, i64 4
  %376 = load i32, i32* %375, align 4
  %377 = mul nsw i32 %376, 94
  %378 = add nsw i32 %373, %377
  %379 = call i32 @relu_reg(i32 %378)
  %380 = mul nsw i32 %379, 127
  %381 = add nsw i32 %254, %380
  %382 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %383 = getelementptr inbounds [5 x i32], [5 x i32]* %382, i64 0, i64 0
  %384 = load i32, i32* %383, align 4
  %385 = mul nsw i32 %384, -23
  %386 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %387 = getelementptr inbounds [5 x i32], [5 x i32]* %386, i64 0, i64 1
  %388 = load i32, i32* %387, align 4
  %389 = mul nsw i32 %388, -63
  %390 = add nsw i32 %385, %389
  %391 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %392 = getelementptr inbounds [5 x i32], [5 x i32]* %391, i64 0, i64 2
  %393 = load i32, i32* %392, align 4
  %394 = mul nsw i32 %393, 49
  %395 = add nsw i32 %390, %394
  %396 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %397 = getelementptr inbounds [5 x i32], [5 x i32]* %396, i64 0, i64 3
  %398 = load i32, i32* %397, align 4
  %399 = mul nsw i32 %398, 50
  %400 = add nsw i32 %395, %399
  %401 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %402 = getelementptr inbounds [5 x i32], [5 x i32]* %401, i64 0, i64 4
  %403 = load i32, i32* %402, align 4
  %404 = mul nsw i32 %403, 72
  %405 = add nsw i32 %400, %404
  %406 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %407 = getelementptr inbounds [5 x i32], [5 x i32]* %406, i64 0, i64 0
  %408 = load i32, i32* %407, align 4
  %409 = mul nsw i32 %408, 85
  %410 = add nsw i32 %405, %409
  %411 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %412 = getelementptr inbounds [5 x i32], [5 x i32]* %411, i64 0, i64 1
  %413 = load i32, i32* %412, align 4
  %414 = mul nsw i32 %413, -30
  %415 = add nsw i32 %410, %414
  %416 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %417 = getelementptr inbounds [5 x i32], [5 x i32]* %416, i64 0, i64 2
  %418 = load i32, i32* %417, align 4
  %419 = mul nsw i32 %418, 12
  %420 = add nsw i32 %415, %419
  %421 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %422 = getelementptr inbounds [5 x i32], [5 x i32]* %421, i64 0, i64 3
  %423 = load i32, i32* %422, align 4
  %424 = mul nsw i32 %423, 125
  %425 = add nsw i32 %420, %424
  %426 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %427 = getelementptr inbounds [5 x i32], [5 x i32]* %426, i64 0, i64 4
  %428 = load i32, i32* %427, align 4
  %429 = mul nsw i32 %428, -117
  %430 = add nsw i32 %425, %429
  %431 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %432 = getelementptr inbounds [5 x i32], [5 x i32]* %431, i64 0, i64 0
  %433 = load i32, i32* %432, align 4
  %434 = mul nsw i32 %433, -65
  %435 = add nsw i32 %430, %434
  %436 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %437 = getelementptr inbounds [5 x i32], [5 x i32]* %436, i64 0, i64 1
  %438 = load i32, i32* %437, align 4
  %439 = mul nsw i32 %438, -67
  %440 = add nsw i32 %435, %439
  %441 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %442 = getelementptr inbounds [5 x i32], [5 x i32]* %441, i64 0, i64 2
  %443 = load i32, i32* %442, align 4
  %444 = mul nsw i32 %443, 125
  %445 = add nsw i32 %440, %444
  %446 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %447 = getelementptr inbounds [5 x i32], [5 x i32]* %446, i64 0, i64 3
  %448 = load i32, i32* %447, align 4
  %449 = mul nsw i32 %448, 110
  %450 = add nsw i32 %445, %449
  %451 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %452 = getelementptr inbounds [5 x i32], [5 x i32]* %451, i64 0, i64 4
  %453 = load i32, i32* %452, align 4
  %454 = mul nsw i32 %453, -31
  %455 = add nsw i32 %450, %454
  %456 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %457 = getelementptr inbounds [5 x i32], [5 x i32]* %456, i64 0, i64 0
  %458 = load i32, i32* %457, align 4
  %459 = mul nsw i32 %458, -123
  %460 = add nsw i32 %455, %459
  %461 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %462 = getelementptr inbounds [5 x i32], [5 x i32]* %461, i64 0, i64 1
  %463 = load i32, i32* %462, align 4
  %464 = mul nsw i32 %463, 83
  %465 = add nsw i32 %460, %464
  %466 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %467 = getelementptr inbounds [5 x i32], [5 x i32]* %466, i64 0, i64 2
  %468 = load i32, i32* %467, align 4
  %469 = mul nsw i32 %468, 122
  %470 = add nsw i32 %465, %469
  %471 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %472 = getelementptr inbounds [5 x i32], [5 x i32]* %471, i64 0, i64 3
  %473 = load i32, i32* %472, align 4
  %474 = mul nsw i32 %473, 11
  %475 = add nsw i32 %470, %474
  %476 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %477 = getelementptr inbounds [5 x i32], [5 x i32]* %476, i64 0, i64 4
  %478 = load i32, i32* %477, align 4
  %479 = mul nsw i32 %478, -23
  %480 = add nsw i32 %475, %479
  %481 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %482 = getelementptr inbounds [5 x i32], [5 x i32]* %481, i64 0, i64 0
  %483 = load i32, i32* %482, align 4
  %484 = mul nsw i32 %483, -47
  %485 = add nsw i32 %480, %484
  %486 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %487 = getelementptr inbounds [5 x i32], [5 x i32]* %486, i64 0, i64 1
  %488 = load i32, i32* %487, align 4
  %489 = mul nsw i32 %488, -32
  %490 = add nsw i32 %485, %489
  %491 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %492 = getelementptr inbounds [5 x i32], [5 x i32]* %491, i64 0, i64 2
  %493 = load i32, i32* %492, align 4
  %494 = mul nsw i32 %493, -117
  %495 = add nsw i32 %490, %494
  %496 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %497 = getelementptr inbounds [5 x i32], [5 x i32]* %496, i64 0, i64 3
  %498 = load i32, i32* %497, align 4
  %499 = mul nsw i32 %498, 95
  %500 = add nsw i32 %495, %499
  %501 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %502 = getelementptr inbounds [5 x i32], [5 x i32]* %501, i64 0, i64 4
  %503 = load i32, i32* %502, align 4
  %504 = mul nsw i32 %503, 118
  %505 = add nsw i32 %500, %504
  %506 = call i32 @relu_reg(i32 %505)
  %507 = mul nsw i32 %506, -106
  %508 = add nsw i32 %381, %507
  %509 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %510 = getelementptr inbounds [5 x i32], [5 x i32]* %509, i64 0, i64 0
  %511 = load i32, i32* %510, align 4
  %512 = mul nsw i32 %511, 8
  %513 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %514 = getelementptr inbounds [5 x i32], [5 x i32]* %513, i64 0, i64 1
  %515 = load i32, i32* %514, align 4
  %516 = mul nsw i32 %515, 82
  %517 = add nsw i32 %512, %516
  %518 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %519 = getelementptr inbounds [5 x i32], [5 x i32]* %518, i64 0, i64 2
  %520 = load i32, i32* %519, align 4
  %521 = mul nsw i32 %520, -104
  %522 = add nsw i32 %517, %521
  %523 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %524 = getelementptr inbounds [5 x i32], [5 x i32]* %523, i64 0, i64 3
  %525 = load i32, i32* %524, align 4
  %526 = mul nsw i32 %525, 101
  %527 = add nsw i32 %522, %526
  %528 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %529 = getelementptr inbounds [5 x i32], [5 x i32]* %528, i64 0, i64 4
  %530 = load i32, i32* %529, align 4
  %531 = mul nsw i32 %530, -116
  %532 = add nsw i32 %527, %531
  %533 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %534 = getelementptr inbounds [5 x i32], [5 x i32]* %533, i64 0, i64 0
  %535 = load i32, i32* %534, align 4
  %536 = mul nsw i32 %535, -63
  %537 = add nsw i32 %532, %536
  %538 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %539 = getelementptr inbounds [5 x i32], [5 x i32]* %538, i64 0, i64 1
  %540 = load i32, i32* %539, align 4
  %541 = mul nsw i32 %540, -16
  %542 = add nsw i32 %537, %541
  %543 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %544 = getelementptr inbounds [5 x i32], [5 x i32]* %543, i64 0, i64 2
  %545 = load i32, i32* %544, align 4
  %546 = mul nsw i32 %545, -70
  %547 = add nsw i32 %542, %546
  %548 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %549 = getelementptr inbounds [5 x i32], [5 x i32]* %548, i64 0, i64 3
  %550 = load i32, i32* %549, align 4
  %551 = mul nsw i32 %550, 125
  %552 = add nsw i32 %547, %551
  %553 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %554 = getelementptr inbounds [5 x i32], [5 x i32]* %553, i64 0, i64 4
  %555 = load i32, i32* %554, align 4
  %556 = mul nsw i32 %555, 75
  %557 = add nsw i32 %552, %556
  %558 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %559 = getelementptr inbounds [5 x i32], [5 x i32]* %558, i64 0, i64 0
  %560 = load i32, i32* %559, align 4
  %561 = mul nsw i32 %560, 66
  %562 = add nsw i32 %557, %561
  %563 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %564 = getelementptr inbounds [5 x i32], [5 x i32]* %563, i64 0, i64 1
  %565 = load i32, i32* %564, align 4
  %566 = mul nsw i32 %565, -96
  %567 = add nsw i32 %562, %566
  %568 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %569 = getelementptr inbounds [5 x i32], [5 x i32]* %568, i64 0, i64 2
  %570 = load i32, i32* %569, align 4
  %571 = mul nsw i32 %570, -101
  %572 = add nsw i32 %567, %571
  %573 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %574 = getelementptr inbounds [5 x i32], [5 x i32]* %573, i64 0, i64 3
  %575 = load i32, i32* %574, align 4
  %576 = mul nsw i32 %575, -114
  %577 = add nsw i32 %572, %576
  %578 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %579 = getelementptr inbounds [5 x i32], [5 x i32]* %578, i64 0, i64 4
  %580 = load i32, i32* %579, align 4
  %581 = mul nsw i32 %580, 59
  %582 = add nsw i32 %577, %581
  %583 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %584 = getelementptr inbounds [5 x i32], [5 x i32]* %583, i64 0, i64 0
  %585 = load i32, i32* %584, align 4
  %586 = mul nsw i32 %585, 12
  %587 = add nsw i32 %582, %586
  %588 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %589 = getelementptr inbounds [5 x i32], [5 x i32]* %588, i64 0, i64 1
  %590 = load i32, i32* %589, align 4
  %591 = mul nsw i32 %590, 5
  %592 = add nsw i32 %587, %591
  %593 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %594 = getelementptr inbounds [5 x i32], [5 x i32]* %593, i64 0, i64 2
  %595 = load i32, i32* %594, align 4
  %596 = mul nsw i32 %595, -95
  %597 = add nsw i32 %592, %596
  %598 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %599 = getelementptr inbounds [5 x i32], [5 x i32]* %598, i64 0, i64 3
  %600 = load i32, i32* %599, align 4
  %601 = mul nsw i32 %600, 116
  %602 = add nsw i32 %597, %601
  %603 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %604 = getelementptr inbounds [5 x i32], [5 x i32]* %603, i64 0, i64 4
  %605 = load i32, i32* %604, align 4
  %606 = mul nsw i32 %605, -93
  %607 = add nsw i32 %602, %606
  %608 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %609 = getelementptr inbounds [5 x i32], [5 x i32]* %608, i64 0, i64 0
  %610 = load i32, i32* %609, align 4
  %611 = mul nsw i32 %610, 15
  %612 = add nsw i32 %607, %611
  %613 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %614 = getelementptr inbounds [5 x i32], [5 x i32]* %613, i64 0, i64 1
  %615 = load i32, i32* %614, align 4
  %616 = mul nsw i32 %615, 79
  %617 = add nsw i32 %612, %616
  %618 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %619 = getelementptr inbounds [5 x i32], [5 x i32]* %618, i64 0, i64 2
  %620 = load i32, i32* %619, align 4
  %621 = mul nsw i32 %620, 3
  %622 = add nsw i32 %617, %621
  %623 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %624 = getelementptr inbounds [5 x i32], [5 x i32]* %623, i64 0, i64 3
  %625 = load i32, i32* %624, align 4
  %626 = mul nsw i32 %625, 49
  %627 = add nsw i32 %622, %626
  %628 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %629 = getelementptr inbounds [5 x i32], [5 x i32]* %628, i64 0, i64 4
  %630 = load i32, i32* %629, align 4
  %631 = mul nsw i32 %630, -124
  %632 = add nsw i32 %627, %631
  %633 = call i32 @relu_reg(i32 %632)
  %634 = mul nsw i32 %633, -3
  %635 = add nsw i32 %508, %634
  %636 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %637 = getelementptr inbounds [5 x i32], [5 x i32]* %636, i64 0, i64 0
  %638 = load i32, i32* %637, align 4
  %639 = mul nsw i32 %638, 81
  %640 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %641 = getelementptr inbounds [5 x i32], [5 x i32]* %640, i64 0, i64 1
  %642 = load i32, i32* %641, align 4
  %643 = mul nsw i32 %642, 68
  %644 = add nsw i32 %639, %643
  %645 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %646 = getelementptr inbounds [5 x i32], [5 x i32]* %645, i64 0, i64 2
  %647 = load i32, i32* %646, align 4
  %648 = mul nsw i32 %647, -102
  %649 = add nsw i32 %644, %648
  %650 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %651 = getelementptr inbounds [5 x i32], [5 x i32]* %650, i64 0, i64 3
  %652 = load i32, i32* %651, align 4
  %653 = mul nsw i32 %652, -74
  %654 = add nsw i32 %649, %653
  %655 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %656 = getelementptr inbounds [5 x i32], [5 x i32]* %655, i64 0, i64 4
  %657 = load i32, i32* %656, align 4
  %658 = mul nsw i32 %657, 121
  %659 = add nsw i32 %654, %658
  %660 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %661 = getelementptr inbounds [5 x i32], [5 x i32]* %660, i64 0, i64 0
  %662 = load i32, i32* %661, align 4
  %663 = mul nsw i32 %662, -15
  %664 = add nsw i32 %659, %663
  %665 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %666 = getelementptr inbounds [5 x i32], [5 x i32]* %665, i64 0, i64 1
  %667 = load i32, i32* %666, align 4
  %668 = mul nsw i32 %667, 55
  %669 = add nsw i32 %664, %668
  %670 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %671 = getelementptr inbounds [5 x i32], [5 x i32]* %670, i64 0, i64 2
  %672 = load i32, i32* %671, align 4
  %673 = mul nsw i32 %672, 101
  %674 = add nsw i32 %669, %673
  %675 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %676 = getelementptr inbounds [5 x i32], [5 x i32]* %675, i64 0, i64 3
  %677 = load i32, i32* %676, align 4
  %678 = mul nsw i32 %677, -13
  %679 = add nsw i32 %674, %678
  %680 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %681 = getelementptr inbounds [5 x i32], [5 x i32]* %680, i64 0, i64 4
  %682 = load i32, i32* %681, align 4
  %683 = mul nsw i32 %682, -62
  %684 = add nsw i32 %679, %683
  %685 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %686 = getelementptr inbounds [5 x i32], [5 x i32]* %685, i64 0, i64 0
  %687 = load i32, i32* %686, align 4
  %688 = mul nsw i32 %687, 64
  %689 = add nsw i32 %684, %688
  %690 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %691 = getelementptr inbounds [5 x i32], [5 x i32]* %690, i64 0, i64 1
  %692 = load i32, i32* %691, align 4
  %693 = mul nsw i32 %692, 114
  %694 = add nsw i32 %689, %693
  %695 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %696 = getelementptr inbounds [5 x i32], [5 x i32]* %695, i64 0, i64 2
  %697 = load i32, i32* %696, align 4
  %698 = mul nsw i32 %697, 38
  %699 = add nsw i32 %694, %698
  %700 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %701 = getelementptr inbounds [5 x i32], [5 x i32]* %700, i64 0, i64 3
  %702 = load i32, i32* %701, align 4
  %703 = mul nsw i32 %702, -21
  %704 = add nsw i32 %699, %703
  %705 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %706 = getelementptr inbounds [5 x i32], [5 x i32]* %705, i64 0, i64 4
  %707 = load i32, i32* %706, align 4
  %708 = mul nsw i32 %707, 112
  %709 = add nsw i32 %704, %708
  %710 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %711 = getelementptr inbounds [5 x i32], [5 x i32]* %710, i64 0, i64 0
  %712 = load i32, i32* %711, align 4
  %713 = mul nsw i32 %712, 114
  %714 = add nsw i32 %709, %713
  %715 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %716 = getelementptr inbounds [5 x i32], [5 x i32]* %715, i64 0, i64 1
  %717 = load i32, i32* %716, align 4
  %718 = mul nsw i32 %717, 112
  %719 = add nsw i32 %714, %718
  %720 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %721 = getelementptr inbounds [5 x i32], [5 x i32]* %720, i64 0, i64 2
  %722 = load i32, i32* %721, align 4
  %723 = mul nsw i32 %722, -10
  %724 = add nsw i32 %719, %723
  %725 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %726 = getelementptr inbounds [5 x i32], [5 x i32]* %725, i64 0, i64 3
  %727 = load i32, i32* %726, align 4
  %728 = mul nsw i32 %727, -16
  %729 = add nsw i32 %724, %728
  %730 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %731 = getelementptr inbounds [5 x i32], [5 x i32]* %730, i64 0, i64 4
  %732 = load i32, i32* %731, align 4
  %733 = mul nsw i32 %732, -50
  %734 = add nsw i32 %729, %733
  %735 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %736 = getelementptr inbounds [5 x i32], [5 x i32]* %735, i64 0, i64 0
  %737 = load i32, i32* %736, align 4
  %738 = mul nsw i32 %737, -112
  %739 = add nsw i32 %734, %738
  %740 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %741 = getelementptr inbounds [5 x i32], [5 x i32]* %740, i64 0, i64 1
  %742 = load i32, i32* %741, align 4
  %743 = mul nsw i32 %742, -116
  %744 = add nsw i32 %739, %743
  %745 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %746 = getelementptr inbounds [5 x i32], [5 x i32]* %745, i64 0, i64 2
  %747 = load i32, i32* %746, align 4
  %748 = mul nsw i32 %747, -54
  %749 = add nsw i32 %744, %748
  %750 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %751 = getelementptr inbounds [5 x i32], [5 x i32]* %750, i64 0, i64 3
  %752 = load i32, i32* %751, align 4
  %753 = mul nsw i32 %752, 82
  %754 = add nsw i32 %749, %753
  %755 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %756 = getelementptr inbounds [5 x i32], [5 x i32]* %755, i64 0, i64 4
  %757 = load i32, i32* %756, align 4
  %758 = mul nsw i32 %757, -72
  %759 = add nsw i32 %754, %758
  %760 = call i32 @relu_reg(i32 %759)
  %761 = mul nsw i32 %760, 32
  %762 = add nsw i32 %635, %761
  %763 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %764 = getelementptr inbounds [5 x i32], [5 x i32]* %763, i64 0, i64 0
  %765 = load i32, i32* %764, align 4
  %766 = mul nsw i32 %765, 15
  %767 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %768 = getelementptr inbounds [5 x i32], [5 x i32]* %767, i64 0, i64 1
  %769 = load i32, i32* %768, align 4
  %770 = mul nsw i32 %769, -77
  %771 = add nsw i32 %766, %770
  %772 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %773 = getelementptr inbounds [5 x i32], [5 x i32]* %772, i64 0, i64 2
  %774 = load i32, i32* %773, align 4
  %775 = mul nsw i32 %774, 66
  %776 = add nsw i32 %771, %775
  %777 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %778 = getelementptr inbounds [5 x i32], [5 x i32]* %777, i64 0, i64 3
  %779 = load i32, i32* %778, align 4
  %780 = mul nsw i32 %779, -90
  %781 = add nsw i32 %776, %780
  %782 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %783 = getelementptr inbounds [5 x i32], [5 x i32]* %782, i64 0, i64 4
  %784 = load i32, i32* %783, align 4
  %785 = mul nsw i32 %784, -6
  %786 = add nsw i32 %781, %785
  %787 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %788 = getelementptr inbounds [5 x i32], [5 x i32]* %787, i64 0, i64 0
  %789 = load i32, i32* %788, align 4
  %790 = mul nsw i32 %789, -30
  %791 = add nsw i32 %786, %790
  %792 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %793 = getelementptr inbounds [5 x i32], [5 x i32]* %792, i64 0, i64 1
  %794 = load i32, i32* %793, align 4
  %795 = mul nsw i32 %794, -8
  %796 = add nsw i32 %791, %795
  %797 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %798 = getelementptr inbounds [5 x i32], [5 x i32]* %797, i64 0, i64 2
  %799 = load i32, i32* %798, align 4
  %800 = mul nsw i32 %799, 81
  %801 = add nsw i32 %796, %800
  %802 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %803 = getelementptr inbounds [5 x i32], [5 x i32]* %802, i64 0, i64 3
  %804 = load i32, i32* %803, align 4
  %805 = mul nsw i32 %804, 2
  %806 = add nsw i32 %801, %805
  %807 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %808 = getelementptr inbounds [5 x i32], [5 x i32]* %807, i64 0, i64 4
  %809 = load i32, i32* %808, align 4
  %810 = mul nsw i32 %809, -110
  %811 = add nsw i32 %806, %810
  %812 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %813 = getelementptr inbounds [5 x i32], [5 x i32]* %812, i64 0, i64 0
  %814 = load i32, i32* %813, align 4
  %815 = mul nsw i32 %814, -95
  %816 = add nsw i32 %811, %815
  %817 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %818 = getelementptr inbounds [5 x i32], [5 x i32]* %817, i64 0, i64 1
  %819 = load i32, i32* %818, align 4
  %820 = mul nsw i32 %819, 59
  %821 = add nsw i32 %816, %820
  %822 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %823 = getelementptr inbounds [5 x i32], [5 x i32]* %822, i64 0, i64 2
  %824 = load i32, i32* %823, align 4
  %825 = mul nsw i32 %824, 52
  %826 = add nsw i32 %821, %825
  %827 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %828 = getelementptr inbounds [5 x i32], [5 x i32]* %827, i64 0, i64 3
  %829 = load i32, i32* %828, align 4
  %830 = mul nsw i32 %829, 15
  %831 = add nsw i32 %826, %830
  %832 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %833 = getelementptr inbounds [5 x i32], [5 x i32]* %832, i64 0, i64 4
  %834 = load i32, i32* %833, align 4
  %835 = mul nsw i32 %834, 55
  %836 = add nsw i32 %831, %835
  %837 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %838 = getelementptr inbounds [5 x i32], [5 x i32]* %837, i64 0, i64 0
  %839 = load i32, i32* %838, align 4
  %840 = mul nsw i32 %839, -33
  %841 = add nsw i32 %836, %840
  %842 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %843 = getelementptr inbounds [5 x i32], [5 x i32]* %842, i64 0, i64 1
  %844 = load i32, i32* %843, align 4
  %845 = mul nsw i32 %844, 14
  %846 = add nsw i32 %841, %845
  %847 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %848 = getelementptr inbounds [5 x i32], [5 x i32]* %847, i64 0, i64 2
  %849 = load i32, i32* %848, align 4
  %850 = mul nsw i32 %849, 58
  %851 = add nsw i32 %846, %850
  %852 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %853 = getelementptr inbounds [5 x i32], [5 x i32]* %852, i64 0, i64 3
  %854 = load i32, i32* %853, align 4
  %855 = mul nsw i32 %854, 67
  %856 = add nsw i32 %851, %855
  %857 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %858 = getelementptr inbounds [5 x i32], [5 x i32]* %857, i64 0, i64 4
  %859 = load i32, i32* %858, align 4
  %860 = mul nsw i32 %859, 86
  %861 = add nsw i32 %856, %860
  %862 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %863 = getelementptr inbounds [5 x i32], [5 x i32]* %862, i64 0, i64 0
  %864 = load i32, i32* %863, align 4
  %865 = mul nsw i32 %864, -79
  %866 = add nsw i32 %861, %865
  %867 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %868 = getelementptr inbounds [5 x i32], [5 x i32]* %867, i64 0, i64 1
  %869 = load i32, i32* %868, align 4
  %870 = mul nsw i32 %869, 48
  %871 = add nsw i32 %866, %870
  %872 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %873 = getelementptr inbounds [5 x i32], [5 x i32]* %872, i64 0, i64 2
  %874 = load i32, i32* %873, align 4
  %875 = mul nsw i32 %874, -13
  %876 = add nsw i32 %871, %875
  %877 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %878 = getelementptr inbounds [5 x i32], [5 x i32]* %877, i64 0, i64 3
  %879 = load i32, i32* %878, align 4
  %880 = mul nsw i32 %879, -15
  %881 = add nsw i32 %876, %880
  %882 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %883 = getelementptr inbounds [5 x i32], [5 x i32]* %882, i64 0, i64 4
  %884 = load i32, i32* %883, align 4
  %885 = mul nsw i32 %884, 66
  %886 = add nsw i32 %881, %885
  %887 = call i32 @relu_reg(i32 %886)
  %888 = mul nsw i32 %887, -95
  %889 = add nsw i32 %762, %888
  %890 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %891 = getelementptr inbounds [5 x i32], [5 x i32]* %890, i64 0, i64 0
  %892 = load i32, i32* %891, align 4
  %893 = mul nsw i32 %892, 33
  %894 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %895 = getelementptr inbounds [5 x i32], [5 x i32]* %894, i64 0, i64 1
  %896 = load i32, i32* %895, align 4
  %897 = mul nsw i32 %896, 82
  %898 = add nsw i32 %893, %897
  %899 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %900 = getelementptr inbounds [5 x i32], [5 x i32]* %899, i64 0, i64 2
  %901 = load i32, i32* %900, align 4
  %902 = mul nsw i32 %901, 67
  %903 = add nsw i32 %898, %902
  %904 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %905 = getelementptr inbounds [5 x i32], [5 x i32]* %904, i64 0, i64 3
  %906 = load i32, i32* %905, align 4
  %907 = mul nsw i32 %906, 30
  %908 = add nsw i32 %903, %907
  %909 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %910 = getelementptr inbounds [5 x i32], [5 x i32]* %909, i64 0, i64 4
  %911 = load i32, i32* %910, align 4
  %912 = mul nsw i32 %911, -2
  %913 = add nsw i32 %908, %912
  %914 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %915 = getelementptr inbounds [5 x i32], [5 x i32]* %914, i64 0, i64 0
  %916 = load i32, i32* %915, align 4
  %917 = mul nsw i32 %916, 65
  %918 = add nsw i32 %913, %917
  %919 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %920 = getelementptr inbounds [5 x i32], [5 x i32]* %919, i64 0, i64 1
  %921 = load i32, i32* %920, align 4
  %922 = mul nsw i32 %921, 120
  %923 = add nsw i32 %918, %922
  %924 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %925 = getelementptr inbounds [5 x i32], [5 x i32]* %924, i64 0, i64 2
  %926 = load i32, i32* %925, align 4
  %927 = mul nsw i32 %926, -13
  %928 = add nsw i32 %923, %927
  %929 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %930 = getelementptr inbounds [5 x i32], [5 x i32]* %929, i64 0, i64 3
  %931 = load i32, i32* %930, align 4
  %932 = mul nsw i32 %931, 18
  %933 = add nsw i32 %928, %932
  %934 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %935 = getelementptr inbounds [5 x i32], [5 x i32]* %934, i64 0, i64 4
  %936 = load i32, i32* %935, align 4
  %937 = mul nsw i32 %936, 5
  %938 = add nsw i32 %933, %937
  %939 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %940 = getelementptr inbounds [5 x i32], [5 x i32]* %939, i64 0, i64 0
  %941 = load i32, i32* %940, align 4
  %942 = mul nsw i32 %941, 104
  %943 = add nsw i32 %938, %942
  %944 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %945 = getelementptr inbounds [5 x i32], [5 x i32]* %944, i64 0, i64 1
  %946 = load i32, i32* %945, align 4
  %947 = mul nsw i32 %946, -119
  %948 = add nsw i32 %943, %947
  %949 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %950 = getelementptr inbounds [5 x i32], [5 x i32]* %949, i64 0, i64 2
  %951 = load i32, i32* %950, align 4
  %952 = mul nsw i32 %951, -7
  %953 = add nsw i32 %948, %952
  %954 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %955 = getelementptr inbounds [5 x i32], [5 x i32]* %954, i64 0, i64 3
  %956 = load i32, i32* %955, align 4
  %957 = mul nsw i32 %956, 71
  %958 = add nsw i32 %953, %957
  %959 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %960 = getelementptr inbounds [5 x i32], [5 x i32]* %959, i64 0, i64 4
  %961 = load i32, i32* %960, align 4
  %962 = mul nsw i32 %961, 107
  %963 = add nsw i32 %958, %962
  %964 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %965 = getelementptr inbounds [5 x i32], [5 x i32]* %964, i64 0, i64 0
  %966 = load i32, i32* %965, align 4
  %967 = mul nsw i32 %966, 24
  %968 = add nsw i32 %963, %967
  %969 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %970 = getelementptr inbounds [5 x i32], [5 x i32]* %969, i64 0, i64 1
  %971 = load i32, i32* %970, align 4
  %972 = mul nsw i32 %971, 82
  %973 = add nsw i32 %968, %972
  %974 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %975 = getelementptr inbounds [5 x i32], [5 x i32]* %974, i64 0, i64 2
  %976 = load i32, i32* %975, align 4
  %977 = mul nsw i32 %976, -96
  %978 = add nsw i32 %973, %977
  %979 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %980 = getelementptr inbounds [5 x i32], [5 x i32]* %979, i64 0, i64 3
  %981 = load i32, i32* %980, align 4
  %982 = mul nsw i32 %981, -104
  %983 = add nsw i32 %978, %982
  %984 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %985 = getelementptr inbounds [5 x i32], [5 x i32]* %984, i64 0, i64 4
  %986 = load i32, i32* %985, align 4
  %987 = mul nsw i32 %986, -121
  %988 = add nsw i32 %983, %987
  %989 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %990 = getelementptr inbounds [5 x i32], [5 x i32]* %989, i64 0, i64 0
  %991 = load i32, i32* %990, align 4
  %992 = mul nsw i32 %991, 65
  %993 = add nsw i32 %988, %992
  %994 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %995 = getelementptr inbounds [5 x i32], [5 x i32]* %994, i64 0, i64 1
  %996 = load i32, i32* %995, align 4
  %997 = mul nsw i32 %996, 97
  %998 = add nsw i32 %993, %997
  %999 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %1000 = getelementptr inbounds [5 x i32], [5 x i32]* %999, i64 0, i64 2
  %1001 = load i32, i32* %1000, align 4
  %1002 = mul nsw i32 %1001, 83
  %1003 = add nsw i32 %998, %1002
  %1004 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %1005 = getelementptr inbounds [5 x i32], [5 x i32]* %1004, i64 0, i64 3
  %1006 = load i32, i32* %1005, align 4
  %1007 = mul nsw i32 %1006, 46
  %1008 = add nsw i32 %1003, %1007
  %1009 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %1010 = getelementptr inbounds [5 x i32], [5 x i32]* %1009, i64 0, i64 4
  %1011 = load i32, i32* %1010, align 4
  %1012 = mul nsw i32 %1011, -84
  %1013 = add nsw i32 %1008, %1012
  %1014 = call i32 @relu_reg(i32 %1013)
  %1015 = mul nsw i32 %1014, -50
  %1016 = add nsw i32 %889, %1015
  %1017 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %1018 = getelementptr inbounds [5 x i32], [5 x i32]* %1017, i64 0, i64 0
  %1019 = load i32, i32* %1018, align 4
  %1020 = mul nsw i32 %1019, -29
  %1021 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %1022 = getelementptr inbounds [5 x i32], [5 x i32]* %1021, i64 0, i64 1
  %1023 = load i32, i32* %1022, align 4
  %1024 = mul nsw i32 %1023, 7
  %1025 = add nsw i32 %1020, %1024
  %1026 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %1027 = getelementptr inbounds [5 x i32], [5 x i32]* %1026, i64 0, i64 2
  %1028 = load i32, i32* %1027, align 4
  %1029 = mul nsw i32 %1028, -70
  %1030 = add nsw i32 %1025, %1029
  %1031 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %1032 = getelementptr inbounds [5 x i32], [5 x i32]* %1031, i64 0, i64 3
  %1033 = load i32, i32* %1032, align 4
  %1034 = mul nsw i32 %1033, 38
  %1035 = add nsw i32 %1030, %1034
  %1036 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %1037 = getelementptr inbounds [5 x i32], [5 x i32]* %1036, i64 0, i64 4
  %1038 = load i32, i32* %1037, align 4
  %1039 = mul nsw i32 %1038, -90
  %1040 = add nsw i32 %1035, %1039
  %1041 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %1042 = getelementptr inbounds [5 x i32], [5 x i32]* %1041, i64 0, i64 0
  %1043 = load i32, i32* %1042, align 4
  %1044 = mul nsw i32 %1043, -15
  %1045 = add nsw i32 %1040, %1044
  %1046 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %1047 = getelementptr inbounds [5 x i32], [5 x i32]* %1046, i64 0, i64 1
  %1048 = load i32, i32* %1047, align 4
  %1049 = mul nsw i32 %1048, -32
  %1050 = add nsw i32 %1045, %1049
  %1051 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %1052 = getelementptr inbounds [5 x i32], [5 x i32]* %1051, i64 0, i64 2
  %1053 = load i32, i32* %1052, align 4
  %1054 = mul nsw i32 %1053, 37
  %1055 = add nsw i32 %1050, %1054
  %1056 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %1057 = getelementptr inbounds [5 x i32], [5 x i32]* %1056, i64 0, i64 3
  %1058 = load i32, i32* %1057, align 4
  %1059 = mul nsw i32 %1058, 36
  %1060 = add nsw i32 %1055, %1059
  %1061 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %1062 = getelementptr inbounds [5 x i32], [5 x i32]* %1061, i64 0, i64 4
  %1063 = load i32, i32* %1062, align 4
  %1064 = mul nsw i32 %1063, -62
  %1065 = add nsw i32 %1060, %1064
  %1066 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %1067 = getelementptr inbounds [5 x i32], [5 x i32]* %1066, i64 0, i64 0
  %1068 = load i32, i32* %1067, align 4
  %1069 = mul nsw i32 %1068, -125
  %1070 = add nsw i32 %1065, %1069
  %1071 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %1072 = getelementptr inbounds [5 x i32], [5 x i32]* %1071, i64 0, i64 1
  %1073 = load i32, i32* %1072, align 4
  %1074 = mul nsw i32 %1073, -46
  %1075 = add nsw i32 %1070, %1074
  %1076 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %1077 = getelementptr inbounds [5 x i32], [5 x i32]* %1076, i64 0, i64 2
  %1078 = load i32, i32* %1077, align 4
  %1079 = mul nsw i32 %1078, -70
  %1080 = add nsw i32 %1075, %1079
  %1081 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %1082 = getelementptr inbounds [5 x i32], [5 x i32]* %1081, i64 0, i64 3
  %1083 = load i32, i32* %1082, align 4
  %1084 = mul nsw i32 %1083, 37
  %1085 = add nsw i32 %1080, %1084
  %1086 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %1087 = getelementptr inbounds [5 x i32], [5 x i32]* %1086, i64 0, i64 4
  %1088 = load i32, i32* %1087, align 4
  %1089 = mul nsw i32 %1088, -73
  %1090 = add nsw i32 %1085, %1089
  %1091 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %1092 = getelementptr inbounds [5 x i32], [5 x i32]* %1091, i64 0, i64 0
  %1093 = load i32, i32* %1092, align 4
  %1094 = mul nsw i32 %1093, -34
  %1095 = add nsw i32 %1090, %1094
  %1096 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %1097 = getelementptr inbounds [5 x i32], [5 x i32]* %1096, i64 0, i64 1
  %1098 = load i32, i32* %1097, align 4
  %1099 = mul nsw i32 %1098, -87
  %1100 = add nsw i32 %1095, %1099
  %1101 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %1102 = getelementptr inbounds [5 x i32], [5 x i32]* %1101, i64 0, i64 2
  %1103 = load i32, i32* %1102, align 4
  %1104 = mul nsw i32 %1103, -75
  %1105 = add nsw i32 %1100, %1104
  %1106 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %1107 = getelementptr inbounds [5 x i32], [5 x i32]* %1106, i64 0, i64 3
  %1108 = load i32, i32* %1107, align 4
  %1109 = mul nsw i32 %1108, 71
  %1110 = add nsw i32 %1105, %1109
  %1111 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %1112 = getelementptr inbounds [5 x i32], [5 x i32]* %1111, i64 0, i64 4
  %1113 = load i32, i32* %1112, align 4
  %1114 = mul nsw i32 %1113, -77
  %1115 = add nsw i32 %1110, %1114
  %1116 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %1117 = getelementptr inbounds [5 x i32], [5 x i32]* %1116, i64 0, i64 0
  %1118 = load i32, i32* %1117, align 4
  %1119 = mul nsw i32 %1118, 53
  %1120 = add nsw i32 %1115, %1119
  %1121 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %1122 = getelementptr inbounds [5 x i32], [5 x i32]* %1121, i64 0, i64 1
  %1123 = load i32, i32* %1122, align 4
  %1124 = mul nsw i32 %1123, 37
  %1125 = add nsw i32 %1120, %1124
  %1126 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %1127 = getelementptr inbounds [5 x i32], [5 x i32]* %1126, i64 0, i64 2
  %1128 = load i32, i32* %1127, align 4
  %1129 = mul nsw i32 %1128, -103
  %1130 = add nsw i32 %1125, %1129
  %1131 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %1132 = getelementptr inbounds [5 x i32], [5 x i32]* %1131, i64 0, i64 3
  %1133 = load i32, i32* %1132, align 4
  %1134 = mul nsw i32 %1133, -13
  %1135 = add nsw i32 %1130, %1134
  %1136 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %1137 = getelementptr inbounds [5 x i32], [5 x i32]* %1136, i64 0, i64 4
  %1138 = load i32, i32* %1137, align 4
  %1139 = mul nsw i32 %1138, -114
  %1140 = add nsw i32 %1135, %1139
  %1141 = call i32 @relu_reg(i32 %1140)
  %1142 = mul nsw i32 %1141, -23
  %1143 = add nsw i32 %1016, %1142
  %1144 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %1145 = getelementptr inbounds [5 x i32], [5 x i32]* %1144, i64 0, i64 0
  %1146 = load i32, i32* %1145, align 4
  %1147 = mul nsw i32 %1146, 67
  %1148 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %1149 = getelementptr inbounds [5 x i32], [5 x i32]* %1148, i64 0, i64 1
  %1150 = load i32, i32* %1149, align 4
  %1151 = mul nsw i32 %1150, 42
  %1152 = add nsw i32 %1147, %1151
  %1153 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %1154 = getelementptr inbounds [5 x i32], [5 x i32]* %1153, i64 0, i64 2
  %1155 = load i32, i32* %1154, align 4
  %1156 = mul nsw i32 %1155, 41
  %1157 = add nsw i32 %1152, %1156
  %1158 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %1159 = getelementptr inbounds [5 x i32], [5 x i32]* %1158, i64 0, i64 3
  %1160 = load i32, i32* %1159, align 4
  %1161 = mul nsw i32 %1160, -123
  %1162 = add nsw i32 %1157, %1161
  %1163 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 0
  %1164 = getelementptr inbounds [5 x i32], [5 x i32]* %1163, i64 0, i64 4
  %1165 = load i32, i32* %1164, align 4
  %1166 = mul nsw i32 %1165, -92
  %1167 = add nsw i32 %1162, %1166
  %1168 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %1169 = getelementptr inbounds [5 x i32], [5 x i32]* %1168, i64 0, i64 0
  %1170 = load i32, i32* %1169, align 4
  %1171 = mul nsw i32 %1170, 10
  %1172 = add nsw i32 %1167, %1171
  %1173 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %1174 = getelementptr inbounds [5 x i32], [5 x i32]* %1173, i64 0, i64 1
  %1175 = load i32, i32* %1174, align 4
  %1176 = mul nsw i32 %1175, -77
  %1177 = add nsw i32 %1172, %1176
  %1178 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %1179 = getelementptr inbounds [5 x i32], [5 x i32]* %1178, i64 0, i64 2
  %1180 = load i32, i32* %1179, align 4
  %1181 = mul nsw i32 %1180, 75
  %1182 = add nsw i32 %1177, %1181
  %1183 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %1184 = getelementptr inbounds [5 x i32], [5 x i32]* %1183, i64 0, i64 3
  %1185 = load i32, i32* %1184, align 4
  %1186 = mul nsw i32 %1185, 96
  %1187 = add nsw i32 %1182, %1186
  %1188 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 1
  %1189 = getelementptr inbounds [5 x i32], [5 x i32]* %1188, i64 0, i64 4
  %1190 = load i32, i32* %1189, align 4
  %1191 = mul nsw i32 %1190, -51
  %1192 = add nsw i32 %1187, %1191
  %1193 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %1194 = getelementptr inbounds [5 x i32], [5 x i32]* %1193, i64 0, i64 0
  %1195 = load i32, i32* %1194, align 4
  %1196 = mul nsw i32 %1195, 109
  %1197 = add nsw i32 %1192, %1196
  %1198 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %1199 = getelementptr inbounds [5 x i32], [5 x i32]* %1198, i64 0, i64 1
  %1200 = load i32, i32* %1199, align 4
  %1201 = mul nsw i32 %1200, -74
  %1202 = add nsw i32 %1197, %1201
  %1203 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %1204 = getelementptr inbounds [5 x i32], [5 x i32]* %1203, i64 0, i64 2
  %1205 = load i32, i32* %1204, align 4
  %1206 = mul nsw i32 %1205, -7
  %1207 = add nsw i32 %1202, %1206
  %1208 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %1209 = getelementptr inbounds [5 x i32], [5 x i32]* %1208, i64 0, i64 3
  %1210 = load i32, i32* %1209, align 4
  %1211 = mul nsw i32 %1210, -122
  %1212 = add nsw i32 %1207, %1211
  %1213 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 2
  %1214 = getelementptr inbounds [5 x i32], [5 x i32]* %1213, i64 0, i64 4
  %1215 = load i32, i32* %1214, align 4
  %1216 = mul nsw i32 %1215, 67
  %1217 = add nsw i32 %1212, %1216
  %1218 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %1219 = getelementptr inbounds [5 x i32], [5 x i32]* %1218, i64 0, i64 0
  %1220 = load i32, i32* %1219, align 4
  %1221 = mul nsw i32 %1220, 47
  %1222 = add nsw i32 %1217, %1221
  %1223 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %1224 = getelementptr inbounds [5 x i32], [5 x i32]* %1223, i64 0, i64 1
  %1225 = load i32, i32* %1224, align 4
  %1226 = mul nsw i32 %1225, 22
  %1227 = add nsw i32 %1222, %1226
  %1228 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %1229 = getelementptr inbounds [5 x i32], [5 x i32]* %1228, i64 0, i64 2
  %1230 = load i32, i32* %1229, align 4
  %1231 = mul nsw i32 %1230, -68
  %1232 = add nsw i32 %1227, %1231
  %1233 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %1234 = getelementptr inbounds [5 x i32], [5 x i32]* %1233, i64 0, i64 3
  %1235 = load i32, i32* %1234, align 4
  %1236 = mul nsw i32 %1235, 38
  %1237 = add nsw i32 %1232, %1236
  %1238 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 3
  %1239 = getelementptr inbounds [5 x i32], [5 x i32]* %1238, i64 0, i64 4
  %1240 = load i32, i32* %1239, align 4
  %1241 = mul nsw i32 %1240, 29
  %1242 = add nsw i32 %1237, %1241
  %1243 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %1244 = getelementptr inbounds [5 x i32], [5 x i32]* %1243, i64 0, i64 0
  %1245 = load i32, i32* %1244, align 4
  %1246 = mul nsw i32 %1245, 115
  %1247 = add nsw i32 %1242, %1246
  %1248 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %1249 = getelementptr inbounds [5 x i32], [5 x i32]* %1248, i64 0, i64 1
  %1250 = load i32, i32* %1249, align 4
  %1251 = mul nsw i32 %1250, -121
  %1252 = add nsw i32 %1247, %1251
  %1253 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %1254 = getelementptr inbounds [5 x i32], [5 x i32]* %1253, i64 0, i64 2
  %1255 = load i32, i32* %1254, align 4
  %1256 = mul nsw i32 %1255, 36
  %1257 = add nsw i32 %1252, %1256
  %1258 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %1259 = getelementptr inbounds [5 x i32], [5 x i32]* %1258, i64 0, i64 3
  %1260 = load i32, i32* %1259, align 4
  %1261 = mul nsw i32 %1260, -49
  %1262 = add nsw i32 %1257, %1261
  %1263 = getelementptr inbounds [5 x i32], [5 x i32]* %0, i64 4
  %1264 = getelementptr inbounds [5 x i32], [5 x i32]* %1263, i64 0, i64 4
  %1265 = load i32, i32* %1264, align 4
  %1266 = mul nsw i32 %1265, 85
  %1267 = add nsw i32 %1262, %1266
  %1268 = call i32 @relu_reg(i32 %1267)
  %1269 = mul nsw i32 %1268, 46
  %1270 = add nsw i32 %1143, %1269
  %1271 = icmp sgt i32 %1270, 0
  br i1 %1271, label %1272, label %1273

1272:                                             ; preds = %1
  br label %1274

1273:                                             ; preds = %1
  br label %1274

1274:                                             ; preds = %1273, %1272
  %.0 = phi i32 [ 1, %1272 ], [ 0, %1273 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main() #0 {
  %1 = alloca [5 x [5 x i32]], align 16
  %2 = call i32 (...) @getint()
  br label %3

3:                                                ; preds = %34, %0
  %.01 = phi i32 [ %2, %0 ], [ %35, %34 ]
  %4 = icmp sgt i32 %.01, 0
  br i1 %4, label %5, label %36

5:                                                ; preds = %3
  br label %6

6:                                                ; preds = %18, %5
  %.02 = phi i32 [ 0, %5 ], [ %19, %18 ]
  %7 = icmp slt i32 %.02, 5
  br i1 %7, label %8, label %20

8:                                                ; preds = %6
  br label %9

9:                                                ; preds = %11, %8
  %.0 = phi i32 [ 0, %8 ], [ %17, %11 ]
  %10 = icmp slt i32 %.0, 5
  br i1 %10, label %11, label %18

11:                                               ; preds = %9
  %12 = call i32 (...) @getint()
  %13 = sext i32 %.02 to i64
  %14 = getelementptr inbounds [5 x [5 x i32]], [5 x [5 x i32]]* %1, i64 0, i64 %13
  %15 = sext i32 %.0 to i64
  %16 = getelementptr inbounds [5 x i32], [5 x i32]* %14, i64 0, i64 %15
  store i32 %12, i32* %16, align 4
  %17 = add nsw i32 %.0, 1
  br label %9

18:                                               ; preds = %9
  %19 = add nsw i32 %.02, 1
  br label %6

20:                                               ; preds = %6
  %21 = getelementptr inbounds [5 x [5 x i32]], [5 x [5 x i32]]* %1, i64 0, i64 0
  %22 = call i32 @model([5 x i32]* %21)
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = call i32 (i32, ...) bitcast (i32 (...)* @putch to i32 (i32, ...)*)(i32 99)
  %26 = call i32 (i32, ...) bitcast (i32 (...)* @putch to i32 (i32, ...)*)(i32 97)
  %27 = call i32 (i32, ...) bitcast (i32 (...)* @putch to i32 (i32, ...)*)(i32 116)
  %28 = call i32 (i32, ...) bitcast (i32 (...)* @putch to i32 (i32, ...)*)(i32 10)
  br label %34

29:                                               ; preds = %20
  %30 = call i32 (i32, ...) bitcast (i32 (...)* @putch to i32 (i32, ...)*)(i32 100)
  %31 = call i32 (i32, ...) bitcast (i32 (...)* @putch to i32 (i32, ...)*)(i32 111)
  %32 = call i32 (i32, ...) bitcast (i32 (...)* @putch to i32 (i32, ...)*)(i32 103)
  %33 = call i32 (i32, ...) bitcast (i32 (...)* @putch to i32 (i32, ...)*)(i32 10)
  br label %34

34:                                               ; preds = %29, %24
  %35 = sub nsw i32 %.01, 1
  br label %3

36:                                               ; preds = %3
  ret i32 0
}

declare dso_local i32 @getint(...) #1

declare dso_local i32 @putch(...) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 11.0.1"}
